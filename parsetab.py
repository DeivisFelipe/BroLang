
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programaleftELOGICOOULOGICOleft><MAIORIGUALMENORIGUALIGUALDIFERENTEleft+-left*/left()rightUMINUSCHAR DIFERENTE ELOGICO ENQUANTO ESCREVER IGUAL INTEIRO LER MAIORIGUAL MENORIGUAL NAME NULO OULOGICO PRINCIPAL REAL SE SENAOprograma : NULO PRINCIPAL '(' ')' '{' codigo '}'codigo : dec_variavel comandodec_variavel : salva_variavel ';' dec_variavel\n                    | vaziosalva_variavel : tipo lista_nomeslista_nomes : NAME lista_nlista_n : ',' NAME lista_n\n               | vaziodec_variavel : tipo error ';' tipo : INTEIRO \n             | REAL \n             | CHAR  comando : comando_se comando\n                | comando_enquanto comando\n                | comando_atribuicao comando\n                | comando_entrada comando\n                | comando_saida comando\n                | vazio\n    comando_se : SE '(' expressao ')' '{' comando '}' senao senao : SENAO '{' comando '}'\n              | vazio comando_enquanto : ENQUANTO '(' expressao ')' '{' comando '}'comando_atribuicao : name '=' expressao ';' expressao : expressao '+' expressao\n                  | expressao '-' expressao\n                  | expressao '*' expressao\n                  | expressao '/' expressao\n                  | expressao '>' expressao\n                  | expressao '<' expressao\n                  | expressao IGUAL expressao\n                  | expressao MAIORIGUAL expressao\n                  | expressao MENORIGUAL expressao\n                  | expressao DIFERENTE expressao\n                  | expressao ELOGICO expressao\n                  | expressao OULOGICO expressao\n                  | '(' expressao ')'\n                  | '!' expressao\n                  | INTEIRO\n                  | REAL\n                  | CHAR\n                  | name expressao : '-' expressao %prec UMINUSname : NAMEcomando_entrada : LER '(' NAME ')' ';'comando_saida : ESCREVER '(' CHAR ')' ';'\n                     | ESCREVER '(' expressao ')' ';' \n                     | ESCREVER '(' name ')' ';' vazio :"
    
_lr_action_items = {'NULO':([0,],[2,]),'$end':([1,15,],[0,-1,]),'PRINCIPAL':([2,],[3,]),'(':([3,23,24,26,28,38,39,40,42,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,],[4,38,39,41,42,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),')':([4,27,49,52,53,54,55,56,58,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[5,-43,64,-38,-39,-40,-41,79,81,82,83,84,86,-42,-37,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,]),'{':([5,64,79,110,],[6,87,100,112,]),'SE':([6,8,10,17,18,19,20,21,29,43,44,80,87,100,101,102,103,104,107,108,109,111,112,114,],[-48,23,-4,23,23,23,23,23,-48,-3,-9,-23,23,23,-44,-45,-46,-47,-48,-22,-19,-21,23,-20,]),'ENQUANTO':([6,8,10,17,18,19,20,21,29,43,44,80,87,100,101,102,103,104,107,108,109,111,112,114,],[-48,24,-4,24,24,24,24,24,-48,-3,-9,-23,24,24,-44,-45,-46,-47,-48,-22,-19,-21,24,-20,]),'LER':([6,8,10,17,18,19,20,21,29,43,44,80,87,100,101,102,103,104,107,108,109,111,112,114,],[-48,26,-4,26,26,26,26,26,-48,-3,-9,-23,26,26,-44,-45,-46,-47,-48,-22,-19,-21,26,-20,]),'ESCREVER':([6,8,10,17,18,19,20,21,29,43,44,80,87,100,101,102,103,104,107,108,109,111,112,114,],[-48,28,-4,28,28,28,28,28,-48,-3,-9,-23,28,28,-44,-45,-46,-47,-48,-22,-19,-21,28,-20,]),'NAME':([6,8,10,11,12,13,14,17,18,19,20,21,29,38,39,40,41,42,43,44,46,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,80,87,100,101,102,103,104,107,108,109,111,112,114,],[-48,27,-4,32,-10,-11,-12,27,27,27,27,27,-48,27,27,27,58,27,-3,-9,62,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-23,27,27,-44,-45,-46,-47,-48,-22,-19,-21,27,-20,]),'}':([6,7,8,10,16,17,18,19,20,21,22,29,33,34,35,36,37,43,44,80,87,100,101,102,103,104,105,106,107,108,109,111,112,113,114,],[-48,15,-48,-4,-2,-48,-48,-48,-48,-48,-18,-48,-13,-14,-15,-16,-17,-3,-9,-23,-48,-48,-44,-45,-46,-47,107,108,-48,-22,-19,-21,-48,114,-20,]),'INTEIRO':([6,29,38,39,40,42,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,],[12,12,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'REAL':([6,29,38,39,40,42,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,],[13,13,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'CHAR':([6,29,38,39,40,42,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,],[14,14,54,54,54,59,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),';':([9,27,30,31,32,45,47,52,53,54,55,57,62,77,78,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,],[29,-43,44,-5,-48,-6,-8,-38,-39,-40,-41,80,-48,-42,-37,101,102,103,104,-7,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,]),'error':([11,12,13,14,],[30,-10,-11,-12,]),'=':([25,27,],[40,-43,]),'+':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,65,-38,-39,-40,-41,65,65,-40,65,-41,65,-42,65,-36,-24,-25,-26,-27,65,65,65,65,65,65,65,65,]),'-':([27,38,39,40,42,48,49,50,51,52,53,54,55,56,57,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,50,50,50,50,50,66,50,50,-38,-39,-40,-41,66,66,-40,66,-41,66,50,50,50,50,50,50,50,50,50,50,50,50,-42,66,-36,-24,-25,-26,-27,66,66,66,66,66,66,66,66,]),'*':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,67,-38,-39,-40,-41,67,67,-40,67,-41,67,-42,67,-36,67,67,-26,-27,67,67,67,67,67,67,67,67,]),'/':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,68,-38,-39,-40,-41,68,68,-40,68,-41,68,-42,68,-36,68,68,-26,-27,68,68,68,68,68,68,68,68,]),'>':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,69,-38,-39,-40,-41,69,69,-40,69,-41,69,-42,69,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,69,69,]),'<':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,70,-38,-39,-40,-41,70,70,-40,70,-41,70,-42,70,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,70,70,]),'IGUAL':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,71,-38,-39,-40,-41,71,71,-40,71,-41,71,-42,71,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,71,71,]),'MAIORIGUAL':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,72,-38,-39,-40,-41,72,72,-40,72,-41,72,-42,72,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,72,72,]),'MENORIGUAL':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,73,-38,-39,-40,-41,73,73,-40,73,-41,73,-42,73,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,73,73,]),'DIFERENTE':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,74,-38,-39,-40,-41,74,74,-40,74,-41,74,-42,74,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,74,74,]),'ELOGICO':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,75,-38,-39,-40,-41,75,75,-40,75,-41,75,-42,75,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,]),'OULOGICO':([27,49,52,53,54,55,56,57,59,60,61,63,77,78,86,88,89,90,91,92,93,94,95,96,97,98,99,],[-43,76,-38,-39,-40,-41,76,76,-40,76,-41,76,-42,76,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,]),',':([32,62,],[46,46,]),'!':([38,39,40,42,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'SENAO':([107,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'codigo':([6,],[7,]),'dec_variavel':([6,29,],[8,43,]),'salva_variavel':([6,29,],[9,9,]),'vazio':([6,8,17,18,19,20,21,29,32,62,87,100,107,112,],[10,22,22,22,22,22,22,10,47,47,22,22,111,22,]),'tipo':([6,29,],[11,11,]),'comando':([8,17,18,19,20,21,87,100,112,],[16,33,34,35,36,37,105,106,113,]),'comando_se':([8,17,18,19,20,21,87,100,112,],[17,17,17,17,17,17,17,17,17,]),'comando_enquanto':([8,17,18,19,20,21,87,100,112,],[18,18,18,18,18,18,18,18,18,]),'comando_atribuicao':([8,17,18,19,20,21,87,100,112,],[19,19,19,19,19,19,19,19,19,]),'comando_entrada':([8,17,18,19,20,21,87,100,112,],[20,20,20,20,20,20,20,20,20,]),'comando_saida':([8,17,18,19,20,21,87,100,112,],[21,21,21,21,21,21,21,21,21,]),'name':([8,17,18,19,20,21,38,39,40,42,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,87,100,112,],[25,25,25,25,25,25,55,55,55,61,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,25,25,25,]),'lista_nomes':([11,],[31,]),'lista_n':([32,62,],[45,85,]),'expressao':([38,39,40,42,48,50,51,65,66,67,68,69,70,71,72,73,74,75,76,],[49,56,57,60,63,77,78,88,89,90,91,92,93,94,95,96,97,98,99,]),'senao':([107,],[109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> NULO PRINCIPAL ( ) { codigo }','programa',7,'p_programa','yacc.py',32),
  ('codigo -> dec_variavel comando','codigo',2,'p_codigo','yacc.py',36),
  ('dec_variavel -> salva_variavel ; dec_variavel','dec_variavel',3,'p_dec_variavel','yacc.py',43),
  ('dec_variavel -> vazio','dec_variavel',1,'p_dec_variavel','yacc.py',44),
  ('salva_variavel -> tipo lista_nomes','salva_variavel',2,'p_salva_variavel','yacc.py',49),
  ('lista_nomes -> NAME lista_n','lista_nomes',2,'p_lista_nomes','yacc.py',61),
  ('lista_n -> , NAME lista_n','lista_n',3,'p_lista_n','yacc.py',66),
  ('lista_n -> vazio','lista_n',1,'p_lista_n','yacc.py',67),
  ('dec_variavel -> tipo error ;','dec_variavel',3,'p_salva_variavel_erro','yacc.py',75),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','yacc.py',81),
  ('tipo -> REAL','tipo',1,'p_tipo','yacc.py',82),
  ('tipo -> CHAR','tipo',1,'p_tipo','yacc.py',83),
  ('comando -> comando_se comando','comando',2,'p_comando','yacc.py',92),
  ('comando -> comando_enquanto comando','comando',2,'p_comando','yacc.py',93),
  ('comando -> comando_atribuicao comando','comando',2,'p_comando','yacc.py',94),
  ('comando -> comando_entrada comando','comando',2,'p_comando','yacc.py',95),
  ('comando -> comando_saida comando','comando',2,'p_comando','yacc.py',96),
  ('comando -> vazio','comando',1,'p_comando','yacc.py',97),
  ('comando_se -> SE ( expressao ) { comando } senao','comando_se',8,'p_comando_se','yacc.py',102),
  ('senao -> SENAO { comando }','senao',4,'p_senao','yacc.py',106),
  ('senao -> vazio','senao',1,'p_senao','yacc.py',107),
  ('comando_enquanto -> ENQUANTO ( expressao ) { comando }','comando_enquanto',7,'p_comando_enquanto','yacc.py',114),
  ('comando_atribuicao -> name = expressao ;','comando_atribuicao',4,'p_comando_atribuicao','yacc.py',119),
  ('expressao -> expressao + expressao','expressao',3,'p_expressao','yacc.py',141),
  ('expressao -> expressao - expressao','expressao',3,'p_expressao','yacc.py',142),
  ('expressao -> expressao * expressao','expressao',3,'p_expressao','yacc.py',143),
  ('expressao -> expressao / expressao','expressao',3,'p_expressao','yacc.py',144),
  ('expressao -> expressao > expressao','expressao',3,'p_expressao','yacc.py',145),
  ('expressao -> expressao < expressao','expressao',3,'p_expressao','yacc.py',146),
  ('expressao -> expressao IGUAL expressao','expressao',3,'p_expressao','yacc.py',147),
  ('expressao -> expressao MAIORIGUAL expressao','expressao',3,'p_expressao','yacc.py',148),
  ('expressao -> expressao MENORIGUAL expressao','expressao',3,'p_expressao','yacc.py',149),
  ('expressao -> expressao DIFERENTE expressao','expressao',3,'p_expressao','yacc.py',150),
  ('expressao -> expressao ELOGICO expressao','expressao',3,'p_expressao','yacc.py',151),
  ('expressao -> expressao OULOGICO expressao','expressao',3,'p_expressao','yacc.py',152),
  ('expressao -> ( expressao )','expressao',3,'p_expressao','yacc.py',153),
  ('expressao -> ! expressao','expressao',2,'p_expressao','yacc.py',154),
  ('expressao -> INTEIRO','expressao',1,'p_expressao','yacc.py',155),
  ('expressao -> REAL','expressao',1,'p_expressao','yacc.py',156),
  ('expressao -> CHAR','expressao',1,'p_expressao','yacc.py',157),
  ('expressao -> name','expressao',1,'p_expressao','yacc.py',158),
  ('expressao -> - expressao','expressao',2,'p_expressao_negativa','yacc.py',215),
  ('name -> NAME','name',1,'p_name','yacc.py',220),
  ('comando_entrada -> LER ( NAME ) ;','comando_entrada',5,'p_comando_entrada','yacc.py',228),
  ('comando_saida -> ESCREVER ( CHAR ) ;','comando_saida',5,'p_comando_saida','yacc.py',238),
  ('comando_saida -> ESCREVER ( expressao ) ;','comando_saida',5,'p_comando_saida','yacc.py',239),
  ('comando_saida -> ESCREVER ( name ) ;','comando_saida',5,'p_comando_saida','yacc.py',240),
  ('vazio -> <empty>','vazio',0,'p_vazio','yacc.py',254),
]
